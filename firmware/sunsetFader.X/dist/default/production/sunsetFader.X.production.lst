

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Jul 31 15:32:03 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           	psect	idataCOMRAM
    21  000284                     __pidataCOMRAM:
    22                           	opt stack 0
    23                           
    24                           ;initializer for _colorPalette
    25  000284  0000               	dw	0
    26  000286  0000               	dw	0
    27  000288  0000               	dw	0
    28  00028A  003E               	dw	62
    29  00028C  0033               	dw	51
    30  00028E  0055               	dw	85
    31  000290  00CA               	dw	202
    32  000292  003E               	dw	62
    33  000294  0001               	dw	1
    34  000296  00FD               	dw	253
    35  000298  007F               	dw	127
    36  00029A  0004               	dw	4
    37  00029C  0079               	dw	121
    38  00029E  00B8               	dw	184
    39  0002A0  00AF               	dw	175
    40  0002A2  00FF               	dw	255
    41  0002A4  00F2               	dw	242
    42  0002A6  00B5               	dw	181
    43  0000                     _ADCON0bits	set	4034
    44  0000                     _ADCON1bits	set	4033
    45  0000                     _ADCON2bits	set	4032
    46  0000                     _ADRESH	set	4036
    47  0000                     _ANSEL	set	3966
    48  0000                     _ANSELH	set	3967
    49  0000                     _ANSELbits	set	3966
    50  0000                     _INTCON2bits	set	4081
    51  0000                     _INTCONbits	set	4082
    52  0000                     _LATCbits	set	3979
    53  0000                     _OSCCONbits	set	4051
    54  0000                     _PORTAbits	set	3968
    55  0000                     _RCON	set	4048
    56  0000                     _T0CON	set	4053
    57  0000                     _TMR0H	set	4055
    58  0000                     _TMR0L	set	4054
    59  0000                     _TRISCbits	set	3988
    60  0000                     _WPUB	set	3964
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  000226                     __pcinit:
    66                           	opt stack 0
    67  000226                     start_initialization:
    68                           	opt stack 0
    69  000226                     __initialization:
    70                           	opt stack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (11 bytes)
    73  000226  EE00  F042         	lfsr	0,__pbssCOMRAM
    74  00022A  0E0B               	movlw	11
    75  00022C                     clear_0:
    76  00022C  6AEE               	clrf	postinc0,c
    77  00022E  06E8               	decf	wreg,f,c
    78  000230  E1FD               	bnz	clear_0
    79                           
    80                           ; Initialize objects allocated to COMRAM (36 bytes)
    81                           ; load TBLPTR registers with __pidataCOMRAM
    82  000232  0E84               	movlw	low __pidataCOMRAM
    83  000234  6EF6               	movwf	tblptrl,c
    84  000236  0E02               	movlw	high __pidataCOMRAM
    85  000238  6EF7               	movwf	tblptrh,c
    86  00023A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    87  00023C  6EF8               	movwf	tblptru,c
    88  00023E  EE00  F001         	lfsr	0,__pdataCOMRAM
    89  000242  EE10 F024          	lfsr	1,36
    90  000246                     copy_data0:
    91  000246  0009               	tblrd		*+
    92  000248  CFF5 FFEE          	movff	tablat,postinc0
    93  00024C  50E5               	movf	postdec1,w,c
    94  00024E  50E1               	movf	fsr1l,w,c
    95  000250  E1FA               	bnz	copy_data0
    96  000252                     end_of_initialization:
    97                           	opt stack 0
    98  000252                     __end_of__initialization:
    99                           	opt stack 0
   100  000252  0100               	movlb	0
   101  000254  EFF6  F000         	goto	_main	;jump to C main() function
   102                           tblptru	equ	0xFF8
   103                           tblptrh	equ	0xFF7
   104                           tblptrl	equ	0xFF6
   105                           tablat	equ	0xFF5
   106                           postinc0	equ	0xFEE
   107                           wreg	equ	0xFE8
   108                           postdec1	equ	0xFE5
   109                           fsr1l	equ	0xFE1
   110                           
   111                           	psect	bssCOMRAM
   112  000042                     __pbssCOMRAM:
   113                           	opt stack 0
   114  000042                     _led:
   115                           	opt stack 0
   116  000042                     	ds	6
   117  000048                     _Timer_SysTime:
   118                           	opt stack 0
   119  000048                     	ds	2
   120  00004A                     _now:
   121                           	opt stack 0
   122  00004A                     	ds	2
   123  00004C                     _jumperStates:
   124                           	opt stack 0
   125  00004C                     	ds	1
   126                           tblptru	equ	0xFF8
   127                           tblptrh	equ	0xFF7
   128                           tblptrl	equ	0xFF6
   129                           tablat	equ	0xFF5
   130                           postinc0	equ	0xFEE
   131                           wreg	equ	0xFE8
   132                           postdec1	equ	0xFE5
   133                           fsr1l	equ	0xFE1
   134                           
   135                           	psect	dataCOMRAM
   136  000001                     __pdataCOMRAM:
   137                           	opt stack 0
   138  000001                     _colorPalette:
   139                           	opt stack 0
   140  000001                     	ds	36
   141                           tblptru	equ	0xFF8
   142                           tblptrh	equ	0xFF7
   143                           tblptrl	equ	0xFF6
   144                           tablat	equ	0xFF5
   145                           postinc0	equ	0xFEE
   146                           wreg	equ	0xFE8
   147                           postdec1	equ	0xFE5
   148                           fsr1l	equ	0xFE1
   149                           
   150                           	psect	cstackCOMRAM
   151  000025                     __pcstackCOMRAM:
   152                           	opt stack 0
   153  000025                     ??_high_isr:
   154  000025                     
   155                           ; 0 bytes @ 0x0
   156  000025                     	ds	14
   157  000033                     ?___lwdiv:
   158                           	opt stack 0
   159  000033                     sendShort@shortToSend:
   160                           	opt stack 0
   161  000033                     ___lwdiv@dividend:
   162                           	opt stack 0
   163                           
   164                           ; 2 bytes @ 0xE
   165  000033                     	ds	2
   166  000035                     sendShort@i:
   167                           	opt stack 0
   168  000035                     ___lwdiv@divisor:
   169                           	opt stack 0
   170                           
   171                           ; 2 bytes @ 0x10
   172  000035                     	ds	1
   173  000036                     send_LED@led:
   174                           	opt stack 0
   175                           
   176                           ; 6 bytes @ 0x11
   177  000036                     	ds	1
   178  000037                     ___lwdiv@quotient:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x12
   182  000037                     	ds	2
   183  000039                     ___lwdiv@counter:
   184                           	opt stack 0
   185                           
   186                           ; 1 bytes @ 0x14
   187  000039                     	ds	3
   188  00003C                     send_LED@tempShort:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x17
   192  00003C                     	ds	2
   193  00003E                     paintSunset@adcResult:
   194                           	opt stack 0
   195                           
   196                           ; 2 bytes @ 0x19
   197  00003E                     	ds	2
   198  000040                     paintSunset@paletteIndex:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x1B
   202  000040                     	ds	1
   203  000041                     main@resetCause:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x1C
   207  000041                     	ds	1
   208                           tblptru	equ	0xFF8
   209                           tblptrh	equ	0xFF7
   210                           tblptrl	equ	0xFF6
   211                           tablat	equ	0xFF5
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           postdec1	equ	0xFE5
   215                           fsr1l	equ	0xFE1
   216                           
   217 ;;
   218 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   219 ;;
   220 ;; *************** function _main *****************
   221 ;; Defined at:
   222 ;;		line 94 in file "../main.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  resetCause      1   28[COMRAM] unsigned char 
   227 ;; Return value:  Size  Location     Type
   228 ;;		None               void
   229 ;; Registers used:
   230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   236 ;;      Params:         0       0       0       0       0       0       0
   237 ;;      Locals:         1       0       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0
   239 ;;      Totals:         1       0       0       0       0       0       0
   240 ;;Total ram usage:        1 bytes
   241 ;; Hardware stack levels required when called:    4
   242 ;; This function calls:
   243 ;;		_InitializeHardware
   244 ;;		_paintSunset
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text0
   251  0001EC                     __ptext0:
   252                           	opt stack 0
   253  0001EC                     _main:
   254                           	opt stack 27
   255                           
   256                           ;main.c: 96: UINT8 resetCause;
   257                           ;main.c: 98: InitializeHardware();
   258                           
   259                           ;incstack = 0
   260  0001EC  ECD6  F000         	call	_InitializeHardware	;wreg free
   261                           
   262                           ;main.c: 103: resetCause = RCON;
   263  0001F0  CFD0 F041          	movff	4048,main@resetCause	;volatile
   264                           
   265                           ;main.c: 104: __nop();
   266  0001F4  F000               	nop	
   267                           
   268                           ;main.c: 105: __nop();
   269  0001F6  F000               	nop	
   270                           
   271                           ;main.c: 106: __nop();
   272  0001F8  F000               	nop	
   273                           
   274                           ;main.c: 107: RCON |= 0b10011;
   275  0001FA  0E13               	movlw	19
   276  0001FC  12D0               	iorwf	4048,f,c	;volatile
   277                           
   278                           ;main.c: 110: jumperStates[0] = PORTAbits.RA5;
   279  0001FE  0E00               	movlw	0
   280  000200  BA80               	btfsc	3968,5,c	;volatile
   281  000202  0E01               	movlw	1
   282  000204  6E4C               	movwf	_jumperStates,c
   283                           
   284                           ;main.c: 112: paintSunset(0);
   285  000206  0E00               	movlw	0
   286  000208  6E3F               	movwf	paintSunset@adcResult+1,c
   287  00020A  0E00               	movlw	0
   288  00020C  6E3E               	movwf	paintSunset@adcResult,c
   289  00020E  EC3F  F000         	call	_paintSunset	;wreg free
   290  000212                     l50:
   291  000212  0004               	clrwdt		;# 
   292                           
   293                           ;main.c: 122: if(!ADCON0bits.GODONE)
   294  000214  B2C2               	btfsc	4034,1,c	;volatile
   295  000216  D7FD               	goto	l50
   296                           
   297                           ;main.c: 123: {
   298                           ;main.c: 124: paintSunset(ADRESH);
   299  000218  CFC4 F03E          	movff	4036,paintSunset@adcResult	;volatile
   300  00021C  6A3F               	clrf	paintSunset@adcResult+1,c
   301  00021E  EC3F  F000         	call	_paintSunset	;wreg free
   302                           
   303                           ;main.c: 125: ADCON0bits.GODONE = 1;
   304  000222  82C2               	bsf	4034,1,c	;volatile
   305  000224  D7F6               	goto	l50
   306  000226                     __end_of_main:
   307                           	opt stack 0
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           postdec1	equ	0xFE5
   315                           fsr1l	equ	0xFE1
   316                           
   317 ;; *************** function _paintSunset *****************
   318 ;; Defined at:
   319 ;;		line 273 in file "../main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;  adcResult       2   25[COMRAM] unsigned short 
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  colorStepCha    6    0        struct .
   324 ;;  paletteIndex    1   27[COMRAM] unsigned char 
   325 ;;  tweenIndex      1    0        unsigned char 
   326 ;; Return value:  Size  Location     Type
   327 ;;		None               void
   328 ;; Registers used:
   329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   335 ;;      Params:         2       0       0       0       0       0       0
   336 ;;      Locals:         1       0       0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0       0       0
   338 ;;      Totals:         3       0       0       0       0       0       0
   339 ;;Total ram usage:        3 bytes
   340 ;; Hardware stack levels used:    1
   341 ;; Hardware stack levels required when called:    3
   342 ;; This function calls:
   343 ;;		___lwdiv
   344 ;;		_send_LED
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text1
   351  00007E                     __ptext1:
   352                           	opt stack 0
   353  00007E                     _paintSunset:
   354                           	opt stack 27
   355                           
   356                           ;main.c: 275: unsigned char paletteIndex, tweenIndex;
   357                           ;main.c: 276: led_type colorStepChange;
   358                           ;main.c: 278: paletteIndex = adcResult / (256/6);
   359                           
   360                           ;incstack = 0
   361  00007E  C03E  F033         	movff	paintSunset@adcResult,___lwdiv@dividend
   362  000082  C03F  F034         	movff	paintSunset@adcResult+1,___lwdiv@dividend+1
   363  000086  0E00               	movlw	0
   364  000088  6E36               	movwf	___lwdiv@divisor+1,c
   365  00008A  0E2A               	movlw	42
   366  00008C  6E35               	movwf	___lwdiv@divisor,c
   367  00008E  EC89  F000         	call	___lwdiv	;wreg free
   368  000092  5033               	movf	?___lwdiv,w,c
   369  000094  6E40               	movwf	paintSunset@paletteIndex,c
   370                           
   371                           ;main.c: 298: if(paletteIndex > (6 -1))
   372  000096  0E05               	movlw	5
   373  000098  6440               	cpfsgt	paintSunset@paletteIndex,c
   374  00009A  D002               	goto	l816
   375                           
   376                           ;main.c: 299: {
   377                           ;main.c: 300: paletteIndex = 6 -1;
   378  00009C  0E05               	movlw	5
   379  00009E  6E40               	movwf	paintSunset@paletteIndex,c
   380  0000A0                     l816:
   381                           
   382                           ;main.c: 301: }
   383                           ;main.c: 303: led[0].red = colorPalette[paletteIndex].red;
   384  0000A0  5040               	movf	paintSunset@paletteIndex,w,c
   385  0000A2  0D06               	mullw	6
   386  0000A4  0E01               	movlw	low _colorPalette
   387  0000A6  24F3               	addwf	prodl,w,c
   388  0000A8  6ED9               	movwf	fsr2l,c
   389  0000AA  0E00               	movlw	high _colorPalette
   390  0000AC  20F4               	addwfc	prodh,w,c
   391  0000AE  6EDA               	movwf	fsr2h,c
   392  0000B0  CFDE F042          	movff	postinc2,_led
   393  0000B4  CFDD F043          	movff	postdec2,_led+1
   394                           
   395                           ;main.c: 304: led[0].green = colorPalette[paletteIndex].green;
   396  0000B8  5040               	movf	paintSunset@paletteIndex,w,c
   397  0000BA  0D06               	mullw	6
   398  0000BC  0E02               	movlw	2
   399  0000BE  26F3               	addwf	prodl,f,c
   400  0000C0  0E00               	movlw	0
   401  0000C2  22F4               	addwfc	prodh,f,c
   402  0000C4  0E01               	movlw	low _colorPalette
   403  0000C6  24F3               	addwf	prodl,w,c
   404  0000C8  6ED9               	movwf	fsr2l,c
   405  0000CA  0E00               	movlw	high _colorPalette
   406  0000CC  20F4               	addwfc	prodh,w,c
   407  0000CE  6EDA               	movwf	fsr2h,c
   408  0000D0  CFDE F044          	movff	postinc2,_led+2
   409  0000D4  CFDD F045          	movff	postdec2,_led+3
   410                           
   411                           ;main.c: 305: led[0].blue = colorPalette[paletteIndex].blue;
   412  0000D8  5040               	movf	paintSunset@paletteIndex,w,c
   413  0000DA  0D06               	mullw	6
   414  0000DC  0E04               	movlw	4
   415  0000DE  26F3               	addwf	prodl,f,c
   416  0000E0  0E00               	movlw	0
   417  0000E2  22F4               	addwfc	prodh,f,c
   418  0000E4  0E01               	movlw	low _colorPalette
   419  0000E6  24F3               	addwf	prodl,w,c
   420  0000E8  6ED9               	movwf	fsr2l,c
   421  0000EA  0E00               	movlw	high _colorPalette
   422  0000EC  20F4               	addwfc	prodh,w,c
   423  0000EE  6EDA               	movwf	fsr2h,c
   424  0000F0  CFDE F046          	movff	postinc2,_led+4
   425  0000F4  CFDD F047          	movff	postdec2,_led+5
   426                           
   427                           ;main.c: 307: send_LED(led[0]);
   428  0000F8  EE20  F042         	lfsr	2,_led
   429  0000FC  EE10  F036         	lfsr	1,send_LED@led
   430  000100  0E06               	movlw	6
   431  000102                     u81:
   432  000102  CFDE FFE6          	movff	postinc2,postinc1
   433  000106  2EE8               	decfsz	wreg,f,c
   434  000108  D7FC               	goto	u81
   435  00010A  ECB2  F000         	call	_send_LED	;wreg free
   436                           
   437                           ;main.c: 309: __nop();
   438  00010E  F000               	nop	
   439  000110  0012               	return	
   440  000112                     __end_of_paintSunset:
   441                           	opt stack 0
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           prodh	equ	0xFF4
   447                           prodl	equ	0xFF3
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           postinc1	equ	0xFE6
   451                           postdec1	equ	0xFE5
   452                           fsr1l	equ	0xFE1
   453                           postinc2	equ	0xFDE
   454                           postdec2	equ	0xFDD
   455                           fsr2h	equ	0xFDA
   456                           fsr2l	equ	0xFD9
   457                           
   458 ;; *************** function _send_LED *****************
   459 ;; Defined at:
   460 ;;		line 176 in file "../main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  led             6   17[COMRAM] struct .
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  tempShort       2   23[COMRAM] unsigned short 
   465 ;; Return value:  Size  Location     Type
   466 ;;		None               void
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   474 ;;      Params:         6       0       0       0       0       0       0
   475 ;;      Locals:         2       0       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0
   477 ;;      Totals:         8       0       0       0       0       0       0
   478 ;;Total ram usage:        8 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    2
   481 ;; This function calls:
   482 ;;		_sendShort
   483 ;; This function is called by:
   484 ;;		_paintSunset
   485 ;;		_test_LEDS
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text2
   490  000164                     __ptext2:
   491                           	opt stack 0
   492  000164                     _send_LED:
   493                           	opt stack 27
   494                           
   495                           ;main.c: 178: unsigned short tempShort;
   496                           ;main.c: 180: tempShort = (led.red << 8);
   497                           
   498                           ;incstack = 0
   499  000164  5036               	movf	send_LED@led,w,c
   500  000166  6E3D               	movwf	send_LED@tempShort+1,c
   501  000168  6A3C               	clrf	send_LED@tempShort,c
   502                           
   503                           ;main.c: 181: sendShort(tempShort);
   504  00016A  C03C  F033         	movff	send_LED@tempShort,sendShort@shortToSend
   505  00016E  C03D  F034         	movff	send_LED@tempShort+1,sendShort@shortToSend+1
   506  000172  EC2C  F001         	call	_sendShort	;wreg free
   507                           
   508                           ;main.c: 182: tempShort = (led.green << 8);
   509  000176  5038               	movf	send_LED@led+2,w,c
   510  000178  6E3D               	movwf	send_LED@tempShort+1,c
   511  00017A  6A3C               	clrf	send_LED@tempShort,c
   512                           
   513                           ;main.c: 183: sendShort(tempShort);
   514  00017C  C03C  F033         	movff	send_LED@tempShort,sendShort@shortToSend
   515  000180  C03D  F034         	movff	send_LED@tempShort+1,sendShort@shortToSend+1
   516  000184  EC2C  F001         	call	_sendShort	;wreg free
   517                           
   518                           ;main.c: 184: tempShort = (led.blue << 8);
   519  000188  503A               	movf	send_LED@led+4,w,c
   520  00018A  6E3D               	movwf	send_LED@tempShort+1,c
   521  00018C  6A3C               	clrf	send_LED@tempShort,c
   522                           
   523                           ;main.c: 185: sendShort(tempShort);
   524  00018E  C03C  F033         	movff	send_LED@tempShort,sendShort@shortToSend
   525  000192  C03D  F034         	movff	send_LED@tempShort+1,sendShort@shortToSend+1
   526  000196  EC2C  F001         	call	_sendShort	;wreg free
   527                           
   528                           ;main.c: 187: LATCbits.LATC2 = 0;
   529  00019A  948B               	bcf	3979,2,c	;volatile
   530                           
   531                           ;main.c: 188: __nop(); __nop(); __nop();
   532  00019C  F000               	nop	
   533  00019E  F000               	nop	
   534  0001A0  F000               	nop	
   535                           
   536                           ;main.c: 190: LATCbits.LATC2 = 1;
   537  0001A2  848B               	bsf	3979,2,c	;volatile
   538                           
   539                           ;main.c: 191: __nop(); __nop(); __nop();
   540  0001A4  F000               	nop	
   541  0001A6  F000               	nop	
   542  0001A8  F000               	nop	
   543  0001AA  0012               	return	
   544  0001AC                     __end_of_send_LED:
   545                           	opt stack 0
   546                           tblptru	equ	0xFF8
   547                           tblptrh	equ	0xFF7
   548                           tblptrl	equ	0xFF6
   549                           tablat	equ	0xFF5
   550                           prodh	equ	0xFF4
   551                           prodl	equ	0xFF3
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postinc1	equ	0xFE6
   555                           postdec1	equ	0xFE5
   556                           fsr1l	equ	0xFE1
   557                           postinc2	equ	0xFDE
   558                           postdec2	equ	0xFDD
   559                           fsr2h	equ	0xFDA
   560                           fsr2l	equ	0xFD9
   561                           
   562 ;; *************** function _sendShort *****************
   563 ;; Defined at:
   564 ;;		line 195 in file "../main.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  shortToSend     2   14[COMRAM] unsigned short 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  i               1   16[COMRAM] unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;		None               void
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   578 ;;      Params:         2       0       0       0       0       0       0
   579 ;;      Locals:         1       0       0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0
   581 ;;      Totals:         3       0       0       0       0       0       0
   582 ;;Total ram usage:        3 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_send_LED
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text3
   593  000258                     __ptext3:
   594                           	opt stack 0
   595  000258                     _sendShort:
   596                           	opt stack 27
   597                           
   598                           ;main.c: 197: unsigned char i;
   599                           ;main.c: 199: for(i=0; i<16; i++)
   600                           
   601                           ;incstack = 0
   602  000258  0E00               	movlw	0
   603  00025A  6E35               	movwf	sendShort@i,c
   604  00025C  0E0F               	movlw	15
   605  00025E  6435               	cpfsgt	sendShort@i,c
   606  000260  D001               	goto	l67
   607  000262  0012               	return	
   608  000264                     l67:
   609                           
   610                           ;main.c: 200: {
   611                           ;main.c: 201: if(shortToSend & 0x8000)
   612  000264  AE34               	btfss	sendShort@shortToSend+1,7,c
   613  000266  D002               	goto	l69
   614                           
   615                           ;main.c: 202: {
   616                           ;main.c: 203: LATCbits.LATC5 = 1;
   617  000268  8A8B               	bsf	3979,5,c	;volatile
   618                           
   619                           ;main.c: 204: }
   620  00026A  D001               	goto	l726
   621  00026C                     l69:
   622                           
   623                           ;main.c: 205: else
   624                           ;main.c: 206: {
   625                           ;main.c: 207: LATCbits.LATC5 = 0;
   626  00026C  9A8B               	bcf	3979,5,c	;volatile
   627  00026E                     l726:
   628                           
   629                           ;main.c: 208: }
   630                           ;main.c: 209: shortToSend <<= 1;
   631  00026E  90D8               	bcf	status,0,c
   632  000270  3633               	rlcf	sendShort@shortToSend,f,c
   633  000272  3634               	rlcf	sendShort@shortToSend+1,f,c
   634                           
   635                           ;main.c: 211: LATCbits.LATC3 = 1;
   636  000274  868B               	bsf	3979,3,c	;volatile
   637                           
   638                           ;main.c: 212: __nop();
   639  000276  F000               	nop	
   640                           
   641                           ;main.c: 213: LATCbits.LATC3 = 0;
   642  000278  968B               	bcf	3979,3,c	;volatile
   643  00027A  2A35               	incf	sendShort@i,f,c
   644  00027C  0E0F               	movlw	15
   645  00027E  6435               	cpfsgt	sendShort@i,c
   646  000280  D7F1               	goto	l67
   647  000282  0012               	return	
   648  000284                     __end_of_sendShort:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           prodh	equ	0xFF4
   655                           prodl	equ	0xFF3
   656                           postinc0	equ	0xFEE
   657                           wreg	equ	0xFE8
   658                           postinc1	equ	0xFE6
   659                           postdec1	equ	0xFE5
   660                           fsr1l	equ	0xFE1
   661                           postinc2	equ	0xFDE
   662                           postdec2	equ	0xFDD
   663                           fsr2h	equ	0xFDA
   664                           fsr2l	equ	0xFD9
   665                           status	equ	0xFD8
   666                           
   667 ;; *************** function ___lwdiv *****************
   668 ;; Defined at:
   669 ;;		line 8 in file "/Applications/microchip/xc8/v1.32/sources/common/lwdiv.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  dividend        2   14[COMRAM] unsigned int 
   672 ;;  divisor         2   16[COMRAM] unsigned int 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  quotient        2   18[COMRAM] unsigned int 
   675 ;;  counter         1   20[COMRAM] unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  2   14[COMRAM] unsigned int 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   685 ;;      Params:         4       0       0       0       0       0       0
   686 ;;      Locals:         3       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0
   688 ;;      Totals:         7       0       0       0       0       0       0
   689 ;;Total ram usage:        7 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_paintSunset
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text4
   700  000112                     __ptext4:
   701                           	opt stack 0
   702  000112                     ___lwdiv:
   703                           	opt stack 28
   704                           
   705                           ;incstack = 0
   706  000112  0E00               	movlw	0
   707  000114  6E38               	movwf	___lwdiv@quotient+1,c
   708  000116  0E00               	movlw	0
   709  000118  6E37               	movwf	___lwdiv@quotient,c
   710  00011A  5036               	movf	___lwdiv@divisor+1,w,c
   711  00011C  1035               	iorwf	___lwdiv@divisor,w,c
   712  00011E  B4D8               	btfsc	status,2,c
   713  000120  D01C               	goto	l649
   714  000122  0E01               	movlw	1
   715  000124  6E39               	movwf	___lwdiv@counter,c
   716  000126  D004               	goto	l770
   717  000128                     l768:
   718  000128  90D8               	bcf	status,0,c
   719  00012A  3635               	rlcf	___lwdiv@divisor,f,c
   720  00012C  3636               	rlcf	___lwdiv@divisor+1,f,c
   721  00012E  2A39               	incf	___lwdiv@counter,f,c
   722  000130                     l770:
   723  000130  AE36               	btfss	___lwdiv@divisor+1,7,c
   724  000132  D7FA               	goto	l768
   725  000134                     l772:
   726  000134  90D8               	bcf	status,0,c
   727  000136  3637               	rlcf	___lwdiv@quotient,f,c
   728  000138  3638               	rlcf	___lwdiv@quotient+1,f,c
   729  00013A  5035               	movf	___lwdiv@divisor,w,c
   730  00013C  5C33               	subwf	___lwdiv@dividend,w,c
   731  00013E  5036               	movf	___lwdiv@divisor+1,w,c
   732  000140  5834               	subwfb	___lwdiv@dividend+1,w,c
   733  000142  A0D8               	btfss	status,0,c
   734  000144  D005               	goto	l780
   735  000146  5035               	movf	___lwdiv@divisor,w,c
   736  000148  5E33               	subwf	___lwdiv@dividend,f,c
   737  00014A  5036               	movf	___lwdiv@divisor+1,w,c
   738  00014C  5A34               	subwfb	___lwdiv@dividend+1,f,c
   739  00014E  8037               	bsf	___lwdiv@quotient,0,c
   740  000150                     l780:
   741  000150  90D8               	bcf	status,0,c
   742  000152  3236               	rrcf	___lwdiv@divisor+1,f,c
   743  000154  3235               	rrcf	___lwdiv@divisor,f,c
   744  000156  2E39               	decfsz	___lwdiv@counter,f,c
   745  000158  D7ED               	goto	l772
   746  00015A                     l649:
   747  00015A  C037  F033         	movff	___lwdiv@quotient,?___lwdiv
   748  00015E  C038  F034         	movff	___lwdiv@quotient+1,?___lwdiv+1
   749  000162  0012               	return	
   750  000164                     __end_of___lwdiv:
   751                           	opt stack 0
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           prodh	equ	0xFF4
   757                           prodl	equ	0xFF3
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           postinc1	equ	0xFE6
   761                           postdec1	equ	0xFE5
   762                           fsr1l	equ	0xFE1
   763                           postinc2	equ	0xFDE
   764                           postdec2	equ	0xFDD
   765                           fsr2h	equ	0xFDA
   766                           fsr2l	equ	0xFD9
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _InitializeHardware *****************
   770 ;; Defined at:
   771 ;;		line 130 in file "../main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;		None               void
   778 ;; Registers used:
   779 ;;		wreg, status,2
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   785 ;;      Params:         0       0       0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text5
   800  0001AC                     __ptext5:
   801                           	opt stack 0
   802  0001AC                     _InitializeHardware:
   803                           	opt stack 29
   804                           
   805                           ;main.c: 133: ANSEL = 0x00;
   806                           
   807                           ;incstack = 0
   808  0001AC  0E00               	movlw	0
   809  0001AE  6E7E               	movwf	3966,c	;volatile
   810                           
   811                           ;main.c: 134: ANSELH = 0x00;
   812  0001B0  0E00               	movlw	0
   813  0001B2  6E7F               	movwf	3967,c	;volatile
   814                           
   815                           ;main.c: 136: OSCCONbits.IRCF = 0b111;
   816  0001B4  88D3               	bsf	4051,4,c	;volatile
   817  0001B6  8AD3               	bsf	4051,5,c	;volatile
   818  0001B8  8CD3               	bsf	4051,6,c	;volatile
   819                           
   820                           ;main.c: 140: WPUB = 0b00111111;
   821  0001BA  0E3F               	movlw	63
   822  0001BC  6E7C               	movwf	3964,c	;volatile
   823                           
   824                           ;main.c: 141: INTCON2bits.RBPU = 0;
   825  0001BE  9EF1               	bcf	intcon2,7,c	;volatile
   826                           
   827                           ;main.c: 144: TRISCbits.TRISC3 = 0;
   828  0001C0  9694               	bcf	3988,3,c	;volatile
   829                           
   830                           ;main.c: 145: TRISCbits.TRISC5 = 0;
   831  0001C2  9A94               	bcf	3988,5,c	;volatile
   832                           
   833                           ;main.c: 146: LATCbits.LATC2 = 1;
   834  0001C4  848B               	bsf	3979,2,c	;volatile
   835                           
   836                           ;main.c: 147: TRISCbits.TRISC2 = 0;
   837  0001C6  9494               	bcf	3988,2,c	;volatile
   838                           
   839                           ;main.c: 149: ANSELbits.ANS0 = 1;
   840  0001C8  807E               	bsf	3966,0,c	;volatile
   841                           
   842                           ;main.c: 150: ADCON1bits.VCFG = 0b00;
   843  0001CA  0ECF               	movlw	-49
   844  0001CC  16C1               	andwf	4033,f,c	;volatile
   845                           
   846                           ;main.c: 151: ADCON0bits.CHS = 0b0000;
   847  0001CE  94C2               	bcf	4034,2,c	;volatile
   848  0001D0  96C2               	bcf	4034,3,c	;volatile
   849  0001D2  98C2               	bcf	4034,4,c	;volatile
   850  0001D4  9AC2               	bcf	4034,5,c	;volatile
   851                           
   852                           ;main.c: 152: ADCON0bits.ADON = 1;
   853  0001D6  80C2               	bsf	4034,0,c	;volatile
   854                           
   855                           ;main.c: 153: ADCON2bits.ADFM = 0;
   856  0001D8  9EC0               	bcf	4032,7,c	;volatile
   857                           
   858                           ;main.c: 154: ADCON2bits.ACQT = 0b111;
   859  0001DA  86C0               	bsf	4032,3,c	;volatile
   860  0001DC  88C0               	bsf	4032,4,c	;volatile
   861  0001DE  8AC0               	bsf	4032,5,c	;volatile
   862                           
   863                           ;main.c: 155: ADCON2bits.ADCS = 0b011;
   864  0001E0  50C0               	movf	4032,w,c	;volatile
   865  0001E2  0BF8               	andlw	-8
   866  0001E4  0903               	iorlw	3
   867  0001E6  6EC0               	movwf	4032,c	;volatile
   868                           
   869                           ;main.c: 157: ADCON0bits.ADON = 1;
   870  0001E8  80C2               	bsf	4034,0,c	;volatile
   871  0001EA  0012               	return	
   872  0001EC                     __end_of_InitializeHardware:
   873                           	opt stack 0
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           prodh	equ	0xFF4
   879                           prodl	equ	0xFF3
   880                           intcon2	equ	0xFF1
   881                           postinc0	equ	0xFEE
   882                           wreg	equ	0xFE8
   883                           postinc1	equ	0xFE6
   884                           postdec1	equ	0xFE5
   885                           fsr1l	equ	0xFE1
   886                           postinc2	equ	0xFDE
   887                           postdec2	equ	0xFDD
   888                           fsr2h	equ	0xFDA
   889                           fsr2l	equ	0xFD9
   890                           status	equ	0xFD8
   891                           
   892 ;; *************** function _high_isr *****************
   893 ;; Defined at:
   894 ;;		line 85 in file "../main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;		None               void
   901 ;; Registers used:
   902 ;;		None
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   908 ;;      Params:         0       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0
   910 ;;      Temps:         14       0       0       0       0       0       0
   911 ;;      Totals:        14       0       0       0       0       0       0
   912 ;;Total ram usage:       14 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		Interrupt level 2
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	intcode
   922  000008                     __pintcode:
   923                           	opt stack 0
   924  000008                     _high_isr:
   925                           	opt stack 27
   926                           
   927                           ;incstack = 0
   928  000008  CFFA F025          	movff	pclath,??_high_isr
   929  00000C  CFFB F026          	movff	pclatu,??_high_isr+1
   930  000010  CFE9 F027          	movff	fsr0l,??_high_isr+2
   931  000014  CFEA F028          	movff	fsr0h,??_high_isr+3
   932  000018  CFE1 F029          	movff	fsr1l,??_high_isr+4
   933  00001C  CFE2 F02A          	movff	fsr1h,??_high_isr+5
   934  000020  CFD9 F02B          	movff	fsr2l,??_high_isr+6
   935  000024  CFDA F02C          	movff	fsr2h,??_high_isr+7
   936  000028  CFF3 F02D          	movff	prodl,??_high_isr+8
   937  00002C  CFF4 F02E          	movff	prodh,??_high_isr+9
   938  000030  CFF6 F02F          	movff	tblptrl,??_high_isr+10
   939  000034  CFF7 F030          	movff	tblptrh,??_high_isr+11
   940  000038  CFF8 F031          	movff	tblptru,??_high_isr+12
   941  00003C  CFF5 F032          	movff	tablat,??_high_isr+13
   942  000040  C032  FFF5         	movff	??_high_isr+13,tablat
   943  000044  C031  FFF8         	movff	??_high_isr+12,tblptru
   944  000048  C030  FFF7         	movff	??_high_isr+11,tblptrh
   945  00004C  C02F  FFF6         	movff	??_high_isr+10,tblptrl
   946  000050  C02E  FFF4         	movff	??_high_isr+9,prodh
   947  000054  C02D  FFF3         	movff	??_high_isr+8,prodl
   948  000058  C02C  FFDA         	movff	??_high_isr+7,fsr2h
   949  00005C  C02B  FFD9         	movff	??_high_isr+6,fsr2l
   950  000060  C02A  FFE2         	movff	??_high_isr+5,fsr1h
   951  000064  C029  FFE1         	movff	??_high_isr+4,fsr1l
   952  000068  C028  FFEA         	movff	??_high_isr+3,fsr0h
   953  00006C  C027  FFE9         	movff	??_high_isr+2,fsr0l
   954  000070  C026  FFFB         	movff	??_high_isr+1,pclatu
   955  000074  C025  FFFA         	movff	??_high_isr,pclath
   956  000078  0011               	retfie		f
   957  00007A                     __end_of_high_isr:
   958                           	opt stack 0
   959  0000                     pclatu	equ	0xFFB
   960                           pclath	equ	0xFFA
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           prodh	equ	0xFF4
   966                           prodl	equ	0xFF3
   967                           intcon2	equ	0xFF1
   968                           postinc0	equ	0xFEE
   969                           fsr0h	equ	0xFEA
   970                           fsr0l	equ	0xFE9
   971                           wreg	equ	0xFE8
   972                           postinc1	equ	0xFE6
   973                           postdec1	equ	0xFE5
   974                           fsr1h	equ	0xFE2
   975                           fsr1l	equ	0xFE1
   976                           postinc2	equ	0xFDE
   977                           postdec2	equ	0xFDD
   978                           fsr2h	equ	0xFDA
   979                           fsr2l	equ	0xFD9
   980                           status	equ	0xFD8
   981                           pclatu	equ	0xFFB
   982                           pclath	equ	0xFFA
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           prodh	equ	0xFF4
   988                           prodl	equ	0xFF3
   989                           intcon2	equ	0xFF1
   990                           postinc0	equ	0xFEE
   991                           fsr0h	equ	0xFEA
   992                           fsr0l	equ	0xFE9
   993                           wreg	equ	0xFE8
   994                           postinc1	equ	0xFE6
   995                           postdec1	equ	0xFE5
   996                           fsr1h	equ	0xFE2
   997                           fsr1l	equ	0xFE1
   998                           postinc2	equ	0xFDE
   999                           postdec2	equ	0xFDD
  1000                           fsr2h	equ	0xFDA
  1001                           fsr2l	equ	0xFD9
  1002                           status	equ	0xFD8
  1003                           
  1004                           	psect	rparam
  1005  0000                     pclatu	equ	0xFFB
  1006                           pclath	equ	0xFFA
  1007                           tblptru	equ	0xFF8
  1008                           tblptrh	equ	0xFF7
  1009                           tblptrl	equ	0xFF6
  1010                           tablat	equ	0xFF5
  1011                           prodh	equ	0xFF4
  1012                           prodl	equ	0xFF3
  1013                           intcon2	equ	0xFF1
  1014                           postinc0	equ	0xFEE
  1015                           fsr0h	equ	0xFEA
  1016                           fsr0l	equ	0xFE9
  1017                           wreg	equ	0xFE8
  1018                           postinc1	equ	0xFE6
  1019                           postdec1	equ	0xFE5
  1020                           fsr1h	equ	0xFE2
  1021                           fsr1l	equ	0xFE1
  1022                           postinc2	equ	0xFDE
  1023                           postdec2	equ	0xFDD
  1024                           fsr2h	equ	0xFDA
  1025                           fsr2l	equ	0xFD9
  1026                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        36
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      76
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_paintSunset
    _paintSunset->_send_LED
    _send_LED->_sendShort

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     745
                                             28 COMRAM     1     1      0
                 _InitializeHardware
                        _paintSunset
 ---------------------------------------------------------------------------------
 (1) _paintSunset                                         10     8      2     745
                                             25 COMRAM     3     1      2
                            ___lwdiv
                           _send_LED
 ---------------------------------------------------------------------------------
 (2) _send_LED                                             8     2      6     393
                                             17 COMRAM     8     2      6
                          _sendShort
 ---------------------------------------------------------------------------------
 (3) _sendShort                                            3     1      2     174
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     191
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _InitializeHardware                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeHardware
   _paintSunset
     ___lwdiv
     _send_LED
       _sendShort

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      4C       1       80.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      15        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Jul 31 15:32:03 2014

                         l50 0212                           l67 0264                           l69 026C  
                         u81 0102                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
                        l726 026E                          l816 00A0                          l649 015A  
                        l770 0130                          l780 0150                          l772 0134  
                        l768 0128                          _led 0042                          _now 004A  
                        prod 000FF3                          wreg 000FE8                 __CFG_LVP$OFF 000000  
                       _RCON 000FD0                         _WPUB 000F7C                 __CFG_PWRT$ON 000000  
                       _main 01EC                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr0l 000FE9                         fsr2h 000FDA                         fsr1l 000FE1  
                       fsr2l 000FD9                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 007A                __CFG_IESO$OFF 000000  
 __end_of_InitializeHardware 01EC                        ?_main 0025                        _ANSEL 000F7E  
                      _T0CON 000FD5              __end_of___lwdiv 0164                        _TMR0H 000FD7  
                      _TMR0L 000FD6                 ?_paintSunset 003E               __CFG_BOREN$OFF 000000  
                      tablat 000FF5                        status 000FD8               __CFG_HFOFST$ON 000000  
             __CFG_MCLRE$OFF 000000      paintSunset@paletteIndex 0040              __initialization 0226  
               __end_of_main 0226                       ??_main 0041                __activetblptr 000000  
                     _ADRESH 000FC4                       _ANSELH 000F7F               __CFG_WDTEN$OFF 000000  
             __CFG_WDTPS$256 000000         paintSunset@adcResult 003E             __end_of_high_isr 007A  
                  ??___lwdiv 0037                       clear_0 022C             __end_of_send_LED 01AC  
               __pdataCOMRAM 0001            send_LED@tempShort 003C                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   __accesstop 0060  
    __end_of__initialization 0252               __pcstackCOMRAM 0025         __size_of_paintSunset 0094  
                send_LED@led 0036           __size_of_sendShort 002C           _InitializeHardware 01AC  
                  ?_high_isr 0025          ?_InitializeHardware 0025                    ?_send_LED 0036  
                    __Hparam 0000                      __Lparam 0000                      ___lwdiv 0112  
       ??_InitializeHardware 0033                      __pcinit 0226                    _ANSELbits 000F7E  
                    __ramtop 0600                      __ptext0 01EC                      __ptext1 007E  
                    __ptext2 0164                      __ptext3 0258                      __ptext4 0112  
                    __ptext5 01AC               main@resetCause 0041                   ??_high_isr 0025  
       end_of_initialization 0252            __end_of_sendShort 0284                   ??_send_LED 003C  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                 _colorPalette 0001  
                  _PORTAbits 000F80                    _TRISCbits 000F94                __pidataCOMRAM 0284  
        start_initialization 0226                  __pbssCOMRAM 0042                ??_paintSunset 0040  
       sendShort@shortToSend 0033            __size_of_high_isr 0072             ___lwdiv@dividend 0033  
          __size_of_send_LED 0048                    __pintcode 0008                     ?___lwdiv 0033  
                 sendShort@i 0035                _Timer_SysTime 0048             ___lwdiv@quotient 0037  
        __end_of_paintSunset 0112                     _LATCbits 000F8B                    _sendShort 0258  
__size_of_InitializeHardware 0040                   _ADCON0bits 000FC2                   _ADCON1bits 000FC1  
                 _ADCON2bits 000FC0                  _INTCON2bits 000FF1                    copy_data0 0246  
                 ?_sendShort 0033                     __Hrparam 0000                     __Lrparam 0000  
           __size_of___lwdiv 0052              ___lwdiv@divisor 0035                 _jumperStates 004C  
            ___lwdiv@counter 0039                  _paintSunset 007E                     _high_isr 0008  
              __size_of_main 003A                     _send_LED 0164                   _INTCONbits 000FF2  
                   intlevel2 0000                  ??_sendShort 0035                   _OSCCONbits 000FD3  
          __CFG_FOSC$INTIO67 000000  
